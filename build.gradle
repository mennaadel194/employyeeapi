plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.rawafed'
version = '0.0.1-SNAPSHOT'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	// Spring Boot Dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-aop' // For logging
	implementation 'org.springframework.boot:spring-boot-starter-actuator' // For monitoring and metrics (optional)

	// Third-party API Integration (e.g., for email validation)
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Email Service (SendGrid)
	implementation 'com.sendgrid:sendgrid-java'

	// Logging (SLF4J and Logback)
	implementation 'org.springframework.boot:spring-boot-starter-logging'

	// For async execution
	implementation 'org.springframework:spring-context'

	// Testing Dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:4.0.0'

	// Optional: For retry logic and circuit breakers (Resilience4J)
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
